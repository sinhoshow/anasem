structs{
    struct pessoa{
        string nome;
        int idade;
    };

    struct funcionario extends pessoa{
        int valor2;
    };

}

typedefs{
    typedef struct funcionario func;
    typedef struct pessoa p;
}

const{
    real base_calculo = "te";
    real a = 3;

}

var{
    int num1, num2;
    int matriz[];
    boolean b;
    real numero;
    string cidade;
    funcionario joao;
}

functions{

    function int calcular (int num1, int num2){
        var{
            int a;
        }
        return local.a;
    }

    function real calculo (real num1){
        var{
            real a;
        }
        return local.a * local.num1;
    }    

}

procedures{
    procedure calcula_extra4(string cidade, real cep, string cidade){
        var{
            string estado, alfa;
            int cep, alfa;
        }
    }

    procedure start(){
        var{
            int numero;
            p pessoa;
            boolean codigo;
            real r;
            int valor;
            int retorno;
        }
        local.numero = calculo (10.4,32.2); // erro de parametro quantidade e tipo (string cidade, real cep, string cidade)
        //Calculo retorna real e número é um inteiro
        calculo ("rwrw");
        global.numero = 0.3 + "teste"; // global.numero é real, aceita soma qualquer coisa
        a = 4 + s;
        global.joao.endereco = 10.5; // não existe o atributo endereco
        global.joao.idade = "teste"; //idade é int e não string
        local.cidade = 10.5; //cidade é uma variável global do tipo string
        global.valor = "teste"; //valor é local e inteiro
        global.valor = 10; //valor é local e inteiro

        return local.retorno
    }    
}

